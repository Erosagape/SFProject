//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace shopsales_tools.IWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWebService.IDataExchange")]
    public interface IDataExchange {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/ShowData", ReplyAction="http://tempuri.org/IDataExchange/ShowDataResponse")]
        string ShowData(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/GetDataXML", ReplyAction="http://tempuri.org/IDataExchange/GetDataXMLResponse")]
        string GetDataXML(string dataname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/QueryDataXML", ReplyAction="http://tempuri.org/IDataExchange/QueryDataXMLResponse")]
        string QueryDataXML(string dataname, string cliteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/RemoveDataXML", ReplyAction="http://tempuri.org/IDataExchange/RemoveDataXMLResponse")]
        string RemoveDataXML(string dataname, string cliteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/ProcessDataXML", ReplyAction="http://tempuri.org/IDataExchange/ProcessDataXMLResponse")]
        string ProcessDataXML(string dataname, string xmlstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/GetXMLFileList", ReplyAction="http://tempuri.org/IDataExchange/GetXMLFileListResponse")]
        string GetXMLFileList(string filterstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/GetDataJSON", ReplyAction="http://tempuri.org/IDataExchange/GetDataJSONResponse")]
        string GetDataJSON(string dataname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/ProcessDataJSON", ReplyAction="http://tempuri.org/IDataExchange/ProcessDataJSONResponse")]
        string ProcessDataJSON(string dataname, string xmlstr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/Login", ReplyAction="http://tempuri.org/IDataExchange/LoginResponse")]
        string Login(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/GetDailyReport", ReplyAction="http://tempuri.org/IDataExchange/GetDailyReportResponse")]
        string GetDailyReport(int index, string uid, string ondate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataExchange/SendDailyReport", ReplyAction="http://tempuri.org/IDataExchange/SendDailyReportResponse")]
        string SendDailyReport(string ondate, string data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataExchangeChannel : shopsales_tools.IWebService.IDataExchange, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataExchangeClient : System.ServiceModel.ClientBase<shopsales_tools.IWebService.IDataExchange>, shopsales_tools.IWebService.IDataExchange {
        
        public DataExchangeClient() {
        }
        
        public DataExchangeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataExchangeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ShowData(string data) {
            return base.Channel.ShowData(data);
        }
        
        public string GetDataXML(string dataname) {
            return base.Channel.GetDataXML(dataname);
        }
        
        public string QueryDataXML(string dataname, string cliteria) {
            return base.Channel.QueryDataXML(dataname, cliteria);
        }
        
        public string RemoveDataXML(string dataname, string cliteria) {
            return base.Channel.RemoveDataXML(dataname, cliteria);
        }
        
        public string ProcessDataXML(string dataname, string xmlstr) {
            return base.Channel.ProcessDataXML(dataname, xmlstr);
        }
        
        public string GetXMLFileList(string filterstr) {
            return base.Channel.GetXMLFileList(filterstr);
        }
        
        public string GetDataJSON(string dataname) {
            return base.Channel.GetDataJSON(dataname);
        }
        
        public string ProcessDataJSON(string dataname, string xmlstr) {
            return base.Channel.ProcessDataJSON(dataname, xmlstr);
        }
        
        public string Login(string user, string password) {
            return base.Channel.Login(user, password);
        }
        
        public string GetDailyReport(int index, string uid, string ondate) {
            return base.Channel.GetDailyReport(index, uid, ondate);
        }
        
        public string SendDailyReport(string ondate, string data) {
            return base.Channel.SendDailyReport(ondate, data);
        }
    }
}
